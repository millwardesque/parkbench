name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Typecheck
      run: npm run typecheck

  vitest:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test database
      run: npx prisma migrate deploy

    - name: Run unit tests
      run: npm run test -- --run

    - name: Upload test coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-coverage
        path: coverage/
        if-no-files-found: warn

  cypress:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test database
      run: npx prisma migrate deploy

    - name: Build app
      run: npm run build

    - name: Cypress run
      uses: cypress-io/github-action@v6
      with:
        start: npm run dev
        wait-on: 'http://localhost:5173'
        wait-on-timeout: 60
        record: true
        parallel: true
      env:
        # Pass GitHub token for recording test results
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Pass the dashboard record key (optional but recommended for parallelization)
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY || '' }}
